{
  "openapi": "3.1.0",
  "info": {
    "title": "Telescope Semantic API",
    "description": "\n    Use this API to interact with Telescope's APIs ðŸš€\n\n    Supported Entities are mentioned below:\n    1. Workspaces - Top level organizational units\n    2. Environments - Development stages within workspaces (e.g., Development, Staging, Production)\n    3. Consumers - End users within specific environments\n    4. Consumer Groups - Collections of consumers that share common attributes\n    5. Data Sources - External data systems that integrate with environments\n    ",
    "contact": {
      "name": "Telescope Support",
      "url": "https://jointelescope.com/",
      "email": "info@jointelescope.com"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/api/v1/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "List Workspaces",
        "description": "Get all workspaces",
        "operationId": "list_workspaces_api_v1_workspaces_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceResponse"
                  },
                  "type": "array",
                  "title": "Response List Workspaces Api V1 Workspaces Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Create Workspace",
        "description": "Create a new workspace",
        "operationId": "create_workspace_api_v1_workspaces_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Get Workspace",
        "description": "Get a workspace by ID",
        "operationId": "get_workspace_api_v1_workspaces__workspace_id__get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Update Workspace",
        "description": "Update a workspace",
        "operationId": "update_workspace_api_v1_workspaces__workspace_id__put",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Delete Workspace",
        "description": "Delete a workspace",
        "operationId": "delete_workspace_api_v1_workspaces__workspace_id__delete",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/environments": {
      "post": {
        "tags": [
          "Environments"
        ],
        "summary": "Create Environment",
        "description": "Create a new environment",
        "operationId": "create_environment_api_v1_environments_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "List Environments",
        "description": "List all environments in a workspace",
        "operationId": "list_environments_api_v1_environments_get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentResponse"
                  },
                  "title": "Response List Environments Api V1 Environments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/environments/{environment_id}": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Get Environment",
        "description": "Get an environment by ID",
        "operationId": "get_environment_api_v1_environments__environment_id__get",
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Environment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Environments"
        ],
        "summary": "Update Environment",
        "description": "Update an environment",
        "operationId": "update_environment_api_v1_environments__environment_id__put",
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Environment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Environments"
        ],
        "summary": "Delete Environment",
        "description": "Delete an environment",
        "operationId": "delete_environment_api_v1_environments__environment_id__delete",
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Environment Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/consumers": {
      "post": {
        "tags": [
          "Consumers"
        ],
        "summary": "Create Consumer",
        "description": "Create a new consumer",
        "operationId": "create_consumer_api_v1_consumers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/consumers/{consumer_id}": {
      "get": {
        "tags": [
          "Consumers"
        ],
        "summary": "Get Consumer",
        "description": "Get a consumer by ID",
        "operationId": "get_consumer_api_v1_consumers__consumer_id__get",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Consumers"
        ],
        "summary": "Update Consumer",
        "description": "Update a consumer",
        "operationId": "update_consumer_api_v1_consumers__consumer_id__put",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Consumers"
        ],
        "summary": "Delete Consumer",
        "description": "Delete a consumer",
        "operationId": "delete_consumer_api_v1_consumers__consumer_id__delete",
        "parameters": [
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/environments/{environment_id}/consumers": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "List Consumers",
        "description": "List all consumers in an environment",
        "operationId": "list_consumers_api_v1_environments__environment_id__consumers_get",
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Environment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConsumerResponse"
                  },
                  "title": "Response List Consumers Api V1 Environments  Environment Id  Consumers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/data/sources": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Create Data Source",
        "description": "Create a new data source",
        "operationId": "create_data_source_api_v1_data_sources_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSourceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/data/sources/{data_source_id}": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Get Data Source",
        "description": "Get a data source by ID",
        "operationId": "get_data_source_api_v1_data_sources__data_source_id__get",
        "parameters": [
          {
            "name": "data_source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Data Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Update Data Source",
        "description": "Update a data source",
        "operationId": "update_data_source_api_v1_data_sources__data_source_id__put",
        "parameters": [
          {
            "name": "data_source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Data Source Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSourceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Delete Data Source",
        "description": "Delete a data source",
        "operationId": "delete_data_source_api_v1_data_sources__data_source_id__delete",
        "parameters": [
          {
            "name": "data_source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Data Source Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/environments/{environment_id}/data/sources": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "List Data Sources",
        "description": "List all data sources in an environment",
        "operationId": "list_data_sources_api_v1_environments__environment_id__data_sources_get",
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Environment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSourceResponse"
                  },
                  "title": "Response List Data Sources Api V1 Environments  Environment Id  Data Sources Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/data/sources/{data_source_id}/ping": {
      "post": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Ping Data Source",
        "description": "Test connectivity to a data source",
        "operationId": "ping_data_source_api_v1_data_sources__data_source_id__ping_post",
        "parameters": [
          {
            "name": "data_source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Data Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/data/sources/{data_source_id}/schema": {
      "get": {
        "tags": [
          "Data Sources"
        ],
        "summary": "Get Data Source Schema",
        "description": "Get the schema information for a data source",
        "operationId": "get_data_source_schema_api_v1_data_sources__data_source_id__schema_get",
        "parameters": [
          {
            "name": "data_source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Data Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/consumers/groups": {
      "post": {
        "tags": [
          "Consumer Groups"
        ],
        "summary": "Create Consumer Group",
        "description": "Create a new consumer group",
        "operationId": "create_consumer_group_api_v1_consumers_groups_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerGroupCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerGroupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/consumers/groups/{group_id}": {
      "get": {
        "tags": [
          "Consumer Groups"
        ],
        "summary": "Get Consumer Group",
        "description": "Get a consumer group by ID",
        "operationId": "get_consumer_group_api_v1_consumers_groups__group_id__get",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerGroupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Consumer Groups"
        ],
        "summary": "Update Consumer Group",
        "description": "Update a consumer group",
        "operationId": "update_consumer_group_api_v1_consumers_groups__group_id__put",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerGroupUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerGroupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Consumer Groups"
        ],
        "summary": "Delete Consumer Group",
        "description": "Delete a consumer group",
        "operationId": "delete_consumer_group_api_v1_consumers_groups__group_id__delete",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/consumers/groups/{group_id}/detail": {
      "get": {
        "tags": [
          "Consumer Groups"
        ],
        "summary": "Get Consumer Group With Members",
        "description": "Get a consumer group by ID with all its members",
        "operationId": "get_consumer_group_with_members_api_v1_consumers_groups__group_id__detail_get",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerGroupDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/environments/{environment_id}/consumers/groups": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "List Consumer Groups",
        "description": "List all consumer groups in an environment",
        "operationId": "list_consumer_groups_api_v1_environments__environment_id__consumers_groups_get",
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Environment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConsumerGroupResponse"
                  },
                  "title": "Response List Consumer Groups Api V1 Environments  Environment Id  Consumers Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/consumers/groups/{group_id}/members": {
      "post": {
        "tags": [
          "Consumer Groups"
        ],
        "summary": "Add Consumer To Group",
        "description": "Add a consumer to a group",
        "operationId": "add_consumer_to_group_api_v1_consumers_groups__group_id__members_post",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerGroupMembershipRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/consumers/groups/{group_id}/members/{consumer_id}": {
      "delete": {
        "tags": [
          "Consumer Groups"
        ],
        "summary": "Remove Consumer From Group",
        "description": "Remove a consumer from a group",
        "operationId": "remove_consumer_from_group_api_v1_consumers_groups__group_id__members__consumer_id__delete",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            }
          },
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Consumer Groups"
        ],
        "summary": "Check Consumer In Group",
        "description": "Check if a consumer is a member of a group",
        "operationId": "check_consumer_in_group_api_v1_consumers_groups__group_id__members__consumer_id__get",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            }
          },
          {
            "name": "consumer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Consumer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerGroupMembershipResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health",
        "operationId": "health__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConsumerCreateRequest": {
        "properties": {
          "environment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Environment Id"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          }
        },
        "type": "object",
        "required": [
          "environment_id",
          "first_name",
          "last_name",
          "email"
        ],
        "title": "ConsumerCreateRequest"
      },
      "ConsumerGroupCreateRequest": {
        "properties": {
          "environment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Environment Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "properties": {
            "anyOf": [
              {
                "type": "string",
                "contentMediaType": "application/json",
                "contentSchema": {}
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "type": "object",
        "required": [
          "environment_id",
          "name"
        ],
        "title": "ConsumerGroupCreateRequest"
      },
      "ConsumerGroupDetailResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "environment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Environment Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "properties": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "consumers": {
            "items": {
              "$ref": "#/components/schemas/ConsumerResponse"
            },
            "type": "array",
            "title": "Consumers",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "environment_id",
          "name",
          "created_at",
          "updated_at"
        ],
        "title": "ConsumerGroupDetailResponse"
      },
      "ConsumerGroupMembershipRequest": {
        "properties": {
          "consumer_id": {
            "type": "string",
            "format": "uuid",
            "title": "Consumer Id"
          }
        },
        "type": "object",
        "required": [
          "consumer_id"
        ],
        "title": "ConsumerGroupMembershipRequest"
      },
      "ConsumerGroupMembershipResponse": {
        "properties": {
          "is_member": {
            "type": "boolean",
            "title": "Is Member"
          }
        },
        "type": "object",
        "required": [
          "is_member"
        ],
        "title": "ConsumerGroupMembershipResponse"
      },
      "ConsumerGroupResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "environment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Environment Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "properties": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "environment_id",
          "name",
          "created_at",
          "updated_at"
        ],
        "title": "ConsumerGroupResponse"
      },
      "ConsumerGroupUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "properties": {
            "anyOf": [
              {
                "type": "string",
                "contentMediaType": "application/json",
                "contentSchema": {}
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "type": "object",
        "title": "ConsumerGroupUpdateRequest"
      },
      "ConsumerResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "environment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Environment Id"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "environment_id",
          "first_name",
          "last_name",
          "email",
          "organization",
          "created_at",
          "updated_at"
        ],
        "title": "ConsumerResponse"
      },
      "ConsumerUpdateRequest": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "organization": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization"
          }
        },
        "type": "object",
        "title": "ConsumerUpdateRequest"
      },
      "DataSourceCatalog": {
        "type": "string",
        "enum": [
          "DATABASE",
          "API",
          "FILE"
        ],
        "title": "DataSourceCatalog"
      },
      "DataSourceCreateRequest": {
        "properties": {
          "environment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Environment Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "alias": {
            "type": "string",
            "title": "Alias"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "source_catalog": {
            "$ref": "#/components/schemas/DataSourceCatalog"
          },
          "source_type": {
            "$ref": "#/components/schemas/DataSourceTypes"
          },
          "config": {
            "type": "object",
            "title": "Config"
          }
        },
        "type": "object",
        "required": [
          "environment_id",
          "name",
          "alias",
          "source_catalog",
          "source_type",
          "config"
        ],
        "title": "DataSourceCreateRequest"
      },
      "DataSourceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "environment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Environment Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "source_catalog": {
            "$ref": "#/components/schemas/DataSourceCatalog"
          },
          "source_type": {
            "$ref": "#/components/schemas/DataSourceTypes"
          },
          "config": {
            "type": "object",
            "title": "Config"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "environment_id",
          "name",
          "alias",
          "description",
          "source_catalog",
          "source_type",
          "config",
          "created_at",
          "updated_at"
        ],
        "title": "DataSourceResponse"
      },
      "DataSourceTypes": {
        "type": "string",
        "enum": [
          "postgresql",
          "mysql",
          "sqlite",
          "oracle",
          "bigquery",
          "snowflake",
          "redshift",
          "mongodb",
          "dynamodb",
          "couchbase"
        ],
        "title": "DataSourceTypes"
      },
      "DataSourceUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          }
        },
        "type": "object",
        "title": "DataSourceUpdateRequest"
      },
      "EnvironmentCreateRequest": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "default": "Development"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": "Default environment for the workspace environment"
          }
        },
        "type": "object",
        "required": [
          "workspace_id"
        ],
        "title": "EnvironmentCreateRequest"
      },
      "EnvironmentResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "workspace_id",
          "name",
          "description",
          "created_at",
          "updated_at"
        ],
        "title": "EnvironmentResponse"
      },
      "EnvironmentUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "EnvironmentUpdateRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WorkspaceCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "WorkspaceCreateRequest"
      },
      "WorkspaceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "created_at",
          "updated_at"
        ],
        "title": "WorkspaceResponse"
      },
      "WorkspaceUpdateRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "WorkspaceUpdateRequest"
      }
    }
  },
  "tags": [
    {
      "name": "Workspaces",
      "description": "\n            Operations to manage workspaces.\n            \n            A workspace is the top-level organizational unit that contains multiple environments.\n            Each workspace must have a unique name.\n            "
    },
    {
      "name": "Environments",
      "description": "\n            Operations to manage environments within workspaces.\n            \n            Environments represent different stages of development (e.g., Development, Staging, Production).\n            Each environment must have a unique name within its workspace.\n            "
    },
    {
      "name": "Consumers",
      "description": "\n            Operations to manage consumers within environments.\n            \n            Consumers represent end users of the system and are associated with specific environments.\n            Each consumer must have a unique email within their environment.\n            "
    },
    {
      "name": "Consumer Groups",
      "description": "\n            Operations to manage consumer groups and their members.\n            \n            Consumer groups allow clustering of consumers that share common attributes or behaviors.\n            Each group belongs to a specific environment and has a many-to-many relationship with consumers.\n            Groups must have a unique name within their environment.\n            "
    },
    {
      "name": "Data Sources",
      "description": "\n            Operations to manage data sources connected to environments.\n            \n            Data sources represent external data systems like databases, data warehouses, and document stores.\n            Each data source is associated with a specific environment and must have configuration details.\n            Data sources must have a unique name within their environment.\n            "
    },
    {
      "name": "Health",
      "description": "Endpoints to check server readiness and system health"
    }
  ]
}