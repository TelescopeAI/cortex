"""add_extends_column_to_metrics

Revision ID: 57943408a623
Revises: 6d66b41c1228
Create Date: 2025-07-24 20:04:31.442605

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '57943408a623'
down_revision: Union[str, None] = '6d66b41c1228'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    existing_cols = {col['name'] for col in inspector.get_columns('metrics')}
    if 'extends' not in existing_cols:
        with op.batch_alter_table('metrics') as batch_op:
            batch_op.add_column(sa.Column('extends', sa.UUID(), nullable=True))
            batch_op.create_index(op.f('ix_metrics_extends'), ['extends'], unique=False)
            batch_op.create_foreign_key('fk_metrics_extends', 'metrics', ['extends'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    existing_cols = {col['name'] for col in inspector.get_columns('metrics')}
    if 'extends' in existing_cols:
        with op.batch_alter_table('metrics') as batch_op:
            # best-effort: drop index if present, then column
            try:
                batch_op.drop_index(op.f('ix_metrics_extends'))
            except Exception:
                pass
            try:
                batch_op.drop_constraint('fk_metrics_extends', type_='foreignkey')
            except Exception:
                pass
            batch_op.drop_column('extends')
    # ### end Alembic commands ###
