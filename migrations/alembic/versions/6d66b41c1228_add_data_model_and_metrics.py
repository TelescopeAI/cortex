"""add data model and metrics

Revision ID: 6d66b41c1228
Revises: 243d29355fff
Create Date: 2025-07-23 20:38:09.806341

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from cortex.core.types.databases import DatabaseTypeResolver

# revision identifiers, used by Alembic.
revision: str = '6d66b41c1228'
down_revision: Union[str, None] = '243d29355fff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_models',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('data_source_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('alias', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('parent_version_id', sa.UUID(), nullable=True),
    sa.Column('config', DatabaseTypeResolver.json_type(), nullable=False),
    sa.Column('is_valid', sa.Boolean(), nullable=False),
    sa.Column('validation_errors', DatabaseTypeResolver.array_type(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.ForeignKeyConstraint(['parent_version_id'], ['data_models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_models_alias'), 'data_models', ['alias'], unique=False)
    op.create_index(op.f('ix_data_models_created_at'), 'data_models', ['created_at'], unique=False)
    op.create_index(op.f('ix_data_models_data_source_id'), 'data_models', ['data_source_id'], unique=False)
    op.create_index(op.f('ix_data_models_id'), 'data_models', ['id'], unique=False)
    op.create_index(op.f('ix_data_models_is_active'), 'data_models', ['is_active'], unique=False)
    op.create_index(op.f('ix_data_models_is_valid'), 'data_models', ['is_valid'], unique=False)
    op.create_index(op.f('ix_data_models_name'), 'data_models', ['name'], unique=False)
    op.create_table('metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('data_model_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('alias', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('query', sa.Text(), nullable=True),
    sa.Column('table_name', sa.String(), nullable=True),
    sa.Column('data_source', sa.String(), nullable=True),
    sa.Column('measures', DatabaseTypeResolver.json_type(), nullable=True),
    sa.Column('dimensions', DatabaseTypeResolver.json_type(), nullable=True),
    sa.Column('joins', DatabaseTypeResolver.json_type(), nullable=True),
    sa.Column('aggregations', DatabaseTypeResolver.json_type(), nullable=True),
    sa.Column('output_formats', DatabaseTypeResolver.json_type(), nullable=True),
    sa.Column('parameters', DatabaseTypeResolver.json_type(), nullable=True),
    sa.Column('model_version', sa.Integer(), nullable=False),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('refresh_key', DatabaseTypeResolver.json_type(), nullable=True),
    sa.Column('meta', DatabaseTypeResolver.json_type(), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=False),
    sa.Column('validation_errors', DatabaseTypeResolver.array_type(), nullable=True),
    sa.Column('compiled_query', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['data_model_id'], ['data_models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_metrics_alias'), 'metrics', ['alias'], unique=False)
    op.create_index(op.f('ix_metrics_created_at'), 'metrics', ['created_at'], unique=False)
    op.create_index(op.f('ix_metrics_data_model_id'), 'metrics', ['data_model_id'], unique=False)
    op.create_index(op.f('ix_metrics_id'), 'metrics', ['id'], unique=False)
    op.create_index(op.f('ix_metrics_is_valid'), 'metrics', ['is_valid'], unique=False)
    op.create_index(op.f('ix_metrics_name'), 'metrics', ['name'], unique=False)
    op.create_index(op.f('ix_metrics_public'), 'metrics', ['public'], unique=False)
    op.create_table('model_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('data_model_id', sa.UUID(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('semantic_model', DatabaseTypeResolver.json_type(), nullable=False),
    sa.Column('is_valid', sa.Boolean(), nullable=False),
    sa.Column('validation_errors', DatabaseTypeResolver.array_type(), nullable=True),
    sa.Column('compiled_queries', DatabaseTypeResolver.json_type(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('tags', DatabaseTypeResolver.array_type(), nullable=True),
    sa.Column('config', DatabaseTypeResolver.json_type(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['data_model_id'], ['data_models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_model_versions_created_at'), 'model_versions', ['created_at'], unique=False)
    op.create_index(op.f('ix_model_versions_data_model_id'), 'model_versions', ['data_model_id'], unique=False)
    op.create_index(op.f('ix_model_versions_id'), 'model_versions', ['id'], unique=False)
    op.create_index(op.f('ix_model_versions_version_number'), 'model_versions', ['version_number'], unique=False)
    op.create_table('metric_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('metric_id', sa.UUID(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('snapshot_data', DatabaseTypeResolver.json_type(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('tags', DatabaseTypeResolver.array_type(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['metric_id'], ['metrics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_metric_versions_created_at'), 'metric_versions', ['created_at'], unique=False)
    op.create_index(op.f('ix_metric_versions_id'), 'metric_versions', ['id'], unique=False)
    op.create_index(op.f('ix_metric_versions_metric_id'), 'metric_versions', ['metric_id'], unique=False)
    op.create_index(op.f('ix_metric_versions_version_number'), 'metric_versions', ['version_number'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_metric_versions_version_number'), table_name='metric_versions')
    op.drop_index(op.f('ix_metric_versions_metric_id'), table_name='metric_versions')
    op.drop_index(op.f('ix_metric_versions_id'), table_name='metric_versions')
    op.drop_index(op.f('ix_metric_versions_created_at'), table_name='metric_versions')
    op.drop_table('metric_versions')
    op.drop_index(op.f('ix_model_versions_version_number'), table_name='model_versions')
    op.drop_index(op.f('ix_model_versions_id'), table_name='model_versions')
    op.drop_index(op.f('ix_model_versions_data_model_id'), table_name='model_versions')
    op.drop_index(op.f('ix_model_versions_created_at'), table_name='model_versions')
    op.drop_table('model_versions')
    op.drop_index(op.f('ix_metrics_public'), table_name='metrics')
    op.drop_index(op.f('ix_metrics_name'), table_name='metrics')
    op.drop_index(op.f('ix_metrics_is_valid'), table_name='metrics')
    op.drop_index(op.f('ix_metrics_id'), table_name='metrics')
    op.drop_index(op.f('ix_metrics_data_model_id'), table_name='metrics')
    op.drop_index(op.f('ix_metrics_created_at'), table_name='metrics')
    op.drop_index(op.f('ix_metrics_alias'), table_name='metrics')
    op.drop_table('metrics')
    op.drop_index(op.f('ix_data_models_name'), table_name='data_models')
    op.drop_index(op.f('ix_data_models_is_valid'), table_name='data_models')
    op.drop_index(op.f('ix_data_models_is_active'), table_name='data_models')
    op.drop_index(op.f('ix_data_models_id'), table_name='data_models')
    op.drop_index(op.f('ix_data_models_data_source_id'), table_name='data_models')
    op.drop_index(op.f('ix_data_models_created_at'), table_name='data_models')
    op.drop_index(op.f('ix_data_models_alias'), table_name='data_models')
    op.drop_table('data_models')
    # ### end Alembic commands ###
